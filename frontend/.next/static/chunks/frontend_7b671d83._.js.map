{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/OmniCare-AI/frontend/lib/supabaseClient.ts"],"sourcesContent":["import { createClient } from \"@supabase/supabase-js\";\n\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL as string;\nconst supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY as string;\n\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey);\n"],"names":[],"mappings":";;;;AAEoB;AAFpB;;AAEA,MAAM;AACN,MAAM;AAEC,MAAM,WAAW,IAAA,sNAAY,EAAC,aAAa","debugId":null}},
    {"offset": {"line": 21, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/OmniCare-AI/frontend/app/login/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from \"react\";\nimport { useRouter } from \"next/navigation\";\nimport { supabase } from \"@/lib/supabaseClient\";\n\nexport default function LoginPage() {\n  const router = useRouter();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState<string | null>(null);\n\n  const handleLogin = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setError(null);\n\n    const { error } = await supabase.auth.signInWithPassword({\n      email,\n      password,\n    });\n\n    if (error) {\n      setError(error.message);\n    } else {\n      router.push(\"/dashboard\"); // success â†’ redirect\n    }\n  };\n\n  return (\n    <main className=\"min-h-screen flex items-center justify-center bg-black text-white\">\n      <div className=\"bg-black/70 p-8 rounded-2xl shadow-xl w-full max-w-md border border-purple-500\">\n        <h1 className=\"text-3xl font-bold text-center text-purple-400 mb-6\">\n          OmniCare AI Login\n        </h1>\n        <form onSubmit={handleLogin} className=\"space-y-4\">\n          <input\n            type=\"email\"\n            placeholder=\"Email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            className=\"w-full px-4 py-2 rounded-lg bg-gray-900 border border-gray-700 focus:outline-none focus:border-purple-400\"\n          />\n          <input\n            type=\"password\"\n            placeholder=\"Password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            className=\"w-full px-4 py-2 rounded-lg bg-gray-900 border border-gray-700 focus:outline-none focus:border-purple-400\"\n          />\n          {error && <p className=\"text-red-400 text-sm\">{error}</p>}\n          <button\n            type=\"submit\"\n            className=\"w-full py-2 rounded-lg bg-purple-600 hover:bg-purple-700 transition text-white font-semibold\"\n          >\n            Login\n          </button>\n        </form>\n      </div>\n    </main>\n  );\n}\n"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;;;AAJA;;;;AAMe,SAAS;;IACtB,MAAM,SAAS,IAAA,8JAAS;IACxB,MAAM,CAAC,OAAO,SAAS,GAAG,IAAA,qLAAQ,EAAC;IACnC,MAAM,CAAC,UAAU,YAAY,GAAG,IAAA,qLAAQ,EAAC;IACzC,MAAM,CAAC,OAAO,SAAS,GAAG,IAAA,qLAAQ,EAAgB;IAElD,MAAM,cAAc,OAAO;QACzB,EAAE,cAAc;QAChB,SAAS;QAET,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,gJAAQ,CAAC,IAAI,CAAC,kBAAkB,CAAC;YACvD;YACA;QACF;QAEA,IAAI,OAAO;YACT,SAAS,MAAM,OAAO;QACxB,OAAO;YACL,OAAO,IAAI,CAAC,eAAe,qBAAqB;QAClD;IACF;IAEA,qBACE,yMAAC;QAAK,WAAU;kBACd,cAAA,yMAAC;YAAI,WAAU;;8BACb,yMAAC;oBAAG,WAAU;8BAAsD;;;;;;8BAGpE,yMAAC;oBAAK,UAAU;oBAAa,WAAU;;sCACrC,yMAAC;4BACC,MAAK;4BACL,aAAY;4BACZ,OAAO;4BACP,UAAU,CAAC,IAAM,SAAS,EAAE,MAAM,CAAC,KAAK;4BACxC,WAAU;;;;;;sCAEZ,yMAAC;4BACC,MAAK;4BACL,aAAY;4BACZ,OAAO;4BACP,UAAU,CAAC,IAAM,YAAY,EAAE,MAAM,CAAC,KAAK;4BAC3C,WAAU;;;;;;wBAEX,uBAAS,yMAAC;4BAAE,WAAU;sCAAwB;;;;;;sCAC/C,yMAAC;4BACC,MAAK;4BACL,WAAU;sCACX;;;;;;;;;;;;;;;;;;;;;;;AAOX;GAtDwB;;QACP,8JAAS;;;KADF","debugId":null}}]
}