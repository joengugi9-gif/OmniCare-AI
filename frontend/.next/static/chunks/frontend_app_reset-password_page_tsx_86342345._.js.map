{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/OmniCare-AI/frontend/app/reset-password/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from \"react\";\nimport { supabase } from \"@/lib/supabaseClient\";\n\nexport default function ResetPasswordPage() {\n  const [email, setEmail] = useState(\"\");\n  const [message, setMessage] = useState<string | null>(null);\n\n  const handleReset = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setMessage(null);\n\n    const { error } = await supabase.auth.resetPasswordForEmail(email, {\n      redirectTo: window.location.origin + \"/login\",\n    });\n\n    if (error) {\n      setMessage(error.message);\n    } else {\n      setMessage(\"Check your email to reset your password!\");\n    }\n  };\n\n  return (\n    <div className=\"flex min-h-screen items-center justify-center bg-black text-white\">\n      <form\n        onSubmit={handleReset}\n        className=\"bg-gray-900 p-8 rounded-2xl shadow-lg w-96\"\n      >\n        <h2 className=\"text-2xl font-bold mb-6 text-purple-400\">Reset Password</h2>\n\n        <input\n          type=\"email\"\n          placeholder=\"Email\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n          className=\"w-full p-2 mb-4 rounded bg-gray-800 text-white\"\n          required\n        />\n\n        {message && <p className=\"text-green-400 mb-2\">{message}</p>}\n\n        <button\n          type=\"submit\"\n          className=\"w-full bg-purple-600 hover:bg-purple-700 p-2 rounded\"\n        >\n          Send Reset Email\n        </button>\n      </form>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;AAEA;AACA;;;AAHA;;;AAKe,SAAS;;IACtB,MAAM,CAAC,OAAO,SAAS,GAAG,IAAA,qLAAQ,EAAC;IACnC,MAAM,CAAC,SAAS,WAAW,GAAG,IAAA,qLAAQ,EAAgB;IAEtD,MAAM,cAAc,OAAO;QACzB,EAAE,cAAc;QAChB,WAAW;QAEX,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,gJAAQ,CAAC,IAAI,CAAC,qBAAqB,CAAC,OAAO;YACjE,YAAY,OAAO,QAAQ,CAAC,MAAM,GAAG;QACvC;QAEA,IAAI,OAAO;YACT,WAAW,MAAM,OAAO;QAC1B,OAAO;YACL,WAAW;QACb;IACF;IAEA,qBACE,yMAAC;QAAI,WAAU;kBACb,cAAA,yMAAC;YACC,UAAU;YACV,WAAU;;8BAEV,yMAAC;oBAAG,WAAU;8BAA0C;;;;;;8BAExD,yMAAC;oBACC,MAAK;oBACL,aAAY;oBACZ,OAAO;oBACP,UAAU,CAAC,IAAM,SAAS,EAAE,MAAM,CAAC,KAAK;oBACxC,WAAU;oBACV,QAAQ;;;;;;gBAGT,yBAAW,yMAAC;oBAAE,WAAU;8BAAuB;;;;;;8BAEhD,yMAAC;oBACC,MAAK;oBACL,WAAU;8BACX;;;;;;;;;;;;;;;;;AAMT;GA/CwB;KAAA","debugId":null}}]
}